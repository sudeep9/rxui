package daisyui

import (
	"strings"
    "github.com/sudeep9/rxui"
)

type TextInputColor string
type TextInputSize string
type TextInputType string

const (
	TextInputColorNeutral   TextInputColor = "input-neutral"
	TextInputColorPrimary   TextInputColor = "input-primary"
	TextInputColorSecondary TextInputColor = "input-secondary"
	TextInputColorError     TextInputColor = "input-error"

	TextInputSizeXtraSmall TextInputSize = "input-xs"
	TextInputSizeSmall     TextInputSize = "input-sm"
	TextInputSizeMedium    TextInputSize = "input-md"
	TextInputSizeLarge     TextInputSize = "input-lg"
	TextInputSizeXtraLarge TextInputSize = "input-xl"

	TextInputTypeText  TextInputType = "text"
	TextInputTypeEmail TextInputType = "email"
	TextInputTypePassword TextInputType = "password"
	TextInputTypeNumber   TextInputType = "number"
	TextInputTypeTel      TextInputType = "tel"
	TextInputTypeSearch   TextInputType = "search"
	TextInputTypeDate   TextInputType = "date"
	TextInputTypeDateTimeLocal TextInputType = "datetime-local"
	TextInputTypeTime TextInputType = "time"
	TextInputTypeUrl  TextInputType = "url"
	TextInputTypeColor TextInputType = "color"
	TextInputTypeWeek  TextInputType = "week"
	TextInputTypeMonth TextInputType = "month"
)

type TextInputProps struct {
	Color    TextInputColor
	Size     TextInputSize
	Type     TextInputType
}

templ TextInput(p TextInputProps, attrlist ...templ.KeyValue[string, any]) {
	{{
		classes := []string{"input"}
		if p.Color != "" {
			classes = append(classes, string(p.Color))
		}
		if p.Size != "" {
			classes = append(classes, string(p.Size))
		}

		if p.Type == "" {
			p.Type = TextInputTypeText
		}

		attrs := rxui.UseDefault(rxui.KV("type", p.Type), attrlist...)
		attrs = rxui.MergeClass(strings.Join(classes, " "),  attrs...)
	}}

	<input {attrs...} />
}