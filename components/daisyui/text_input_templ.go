// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package daisyui

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/sudeep9/rxui"
	"strings"
)

type TextInputColor string
type TextInputSize string
type TextInputType string

const (
	TextInputColorNeutral   TextInputColor = "input-neutral"
	TextInputColorPrimary   TextInputColor = "input-primary"
	TextInputColorSecondary TextInputColor = "input-secondary"
	TextInputColorError     TextInputColor = "input-error"

	TextInputSizeXtraSmall TextInputSize = "input-xs"
	TextInputSizeSmall     TextInputSize = "input-sm"
	TextInputSizeMedium    TextInputSize = "input-md"
	TextInputSizeLarge     TextInputSize = "input-lg"
	TextInputSizeXtraLarge TextInputSize = "input-xl"

	TextInputTypeText          TextInputType = "text"
	TextInputTypeEmail         TextInputType = "email"
	TextInputTypePassword      TextInputType = "password"
	TextInputTypeNumber        TextInputType = "number"
	TextInputTypeTel           TextInputType = "tel"
	TextInputTypeSearch        TextInputType = "search"
	TextInputTypeDate          TextInputType = "date"
	TextInputTypeDateTimeLocal TextInputType = "datetime-local"
	TextInputTypeTime          TextInputType = "time"
	TextInputTypeUrl           TextInputType = "url"
	TextInputTypeColor         TextInputType = "color"
	TextInputTypeWeek          TextInputType = "week"
	TextInputTypeMonth         TextInputType = "month"
)

type TextInputProps struct {
	Color TextInputColor
	Size  TextInputSize
	Type  TextInputType
}

func TextInput(p TextInputProps, attrlist ...templ.KeyValue[string, any]) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)

		classes := []string{"input"}
		if p.Color != "" {
			classes = append(classes, string(p.Color))
		}
		if p.Size != "" {
			classes = append(classes, string(p.Size))
		}

		if p.Type == "" {
			p.Type = TextInputTypeText
		}

		attrs := rxui.UseDefault(rxui.KV("type", p.Type), attrlist...)
		attrs = rxui.MergeClass(strings.Join(classes, " "), attrs...)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<input")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderAttributes(ctx, templ_7745c5c3_Buffer, attrs)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, ">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
